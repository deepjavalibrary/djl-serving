configurations {
    exclusion
}

dependencies {
    api platform("ai.djl:bom:${project.version}")
    implementation project(":serving")
    api "ai.djl.aws:aws-ai"

    api platform("software.amazon.awssdk:bom:${awssdk_version}")
    api "software.amazon.awssdk:dynamodb"
    api "software.amazon.awssdk:s3"

    testImplementation("org.testng:testng:${testng_version}") {
        exclude group: "junit", module: "junit"
    }
    testImplementation "com.amazonaws:DynamoDBLocal:2.4.0"
    testImplementation "cloud.localstack:localstack-utils:0.2.15"

    exclusion project(":serving")
    exclusion "com.google.code.gson:gson"
}

jar {
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        (configurations.runtimeClasspath - configurations.exclusion).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

tasks.register('copyNativeDeps', Copy) {
    from(configurations.testRuntimeClasspath) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/native'
}

compileJava.dependsOn copyNativeDeps
test {
    doFirst {
        System.setProperty("java.library.path", 'build/native')
    }
}

tasks.register('copyJar', Copy) {
    from jar
    into "../../serving/plugins"
}

jar.finalizedBy(copyJar)
