name: Build and push docker nightly

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'release/nightly, default is nightly'
        required: true
        default: 'nightly'
  schedule:
    - cron: '0 13 * * *'

jobs:
  nightly-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ cpu, inferentia, deepspeed ]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push nightly docker image
        if: ${{ github.event.inputs.mode == '' || github.event.inputs.mode == 'nightly' }}
        working-directory: serving/docker
        run: |
          DJL_VERSION=$(cat ../../gradle.properties | awk -F '=' '/djl_version/ {print $2}')
          export NIGHTLY="-nightly"
          docker-compose build --no-cache --build-arg djl_version=${DJL_VERSION}~SNAPSHOT ${{ matrix.arch }}
          docker-compose push ${{ matrix.arch }}
      - name: Build and push release docker image
        if: ${{ github.event.inputs.mode == 'release' }}
        working-directory: serving/docker
        run: |
          DJL_VERSION=$(cat ../../gradle.properties | awk -F '=' '/djl_version/ {print $2}')
          export RELEASE_VERSION="${DJL_VERSION}-"
          docker-compose build --no-cache --build-arg djl_version=${DJL_VERSION} ${{ matrix.arch }}
          docker-compose push ${{ matrix.arch }}
      - name: Retag image for release
        if: ${{ matrix.arch == 'cpu' && github.event.inputs.mode == 'release' }}
        working-directory: serving/docker
        run: |
          DJL_VERSION=$(cat ../../gradle.properties | awk -F '=' '/djl_version/ {print $2}')
          docker tag deepjavalibrary/djl-serving:${DJL_VERSION} deepjavalibrary/djl-serving:latest
          docker push deepjavalibrary/djl-serving:latest
