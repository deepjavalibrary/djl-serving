name: Nightly Docker image publish

on:
  workflow_dispatch:

jobs:
  create-runners:
    runs-on: [self-hosted, scheduler]
    steps:
      - name: Create new GPU instance
        id: create_gpu
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN }}" \
          https://api.github.com/repos/deepjavalibrary/djl-serving/actions/runners/registration-token \
          --fail \
          | jq '.token' | tr -d '"' )
          ./start_instance.sh action_gpu $token
      - name: Create new Graviton instance
        id: create_aarch64
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN }}" \
          https://api.github.com/repos/deepjavalibrary/djl-serving/actions/runners/registration-token \
          --fail \
          | jq '.token' | tr -d '"' )
          ./start_instance.sh action_graviton $token
      - name: Create new Inferentia instance
        id: create_inf
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN }}" \
          https://api.github.com/repos/deepjavalibrary/djl-serving/actions/runners/registration-token \
          --fail \
          | jq '.token' | tr -d '"' )
          ./start_instance.sh action_inf $token
    outputs:
      gpu_instance_id: ${{ steps.create_gpu.outputs.action_gpu_instance_id }}
      aarch64_instance_id: ${{ steps.create_aarch64.outputs.action_graviton_instance_id }}
      inf_instance_id: ${{ steps.create_inf.outputs.action_inf_instance_id }}

  execute-gpu-runner:
    runs-on: [self-hosted, gpu]
    needs: create-runners
    steps:
      - name: Test GPU running
        run: |
          nvidia-smi

  execute-aarch64-runner:
    runs-on: [ self-hosted, aarch64 ]
    needs: create-runners
    steps:
      - name: Test ARM running
        run: |
          echo "Hello World"

  execute-inf-runner:
    runs-on: [ self-hosted, inf ]
    needs: create-runners
    steps:
      - name: Test Inferentia running
        run: |
          neuron-ls

  stop-runners:
    if: always()
    runs-on: [self-hosted, scheduler]
    needs: [create-runners, execute-gpu-runner, execute-aarch64-runner, execute-inf-runner]
    steps:
      - name: Stop all instances
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          instance_id=${{ needs.create-runners.outputs.gpu_instance_id }}
          ./stop_instance.sh $instance_id
          instance_id=${{ needs.create-runners.outputs.aarch64_instance_id }}
          ./stop_instance.sh $instance_id
          instance_id=${{ needs.create-runners.outputs.inf_instance_id }}
          ./stop_instance.sh $instance_id
