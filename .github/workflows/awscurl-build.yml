name: awscurl build

on:
  workflow_dispatch:

jobs:
  create-runners:
    runs-on: [ self-hosted, scheduler ]
    steps:
      - name: Create new Graviton instance
        id: create_aarch64
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN }}" \
          https://api.github.com/repos/deepjavalibrary/djl-serving/actions/runners/registration-token \
          --fail \
          | jq '.token' | tr -d '"' )
          ./start_instance.sh action_graviton $token djl-serving
    outputs:
      aarch64_instance_id: ${{ steps.create_aarch64.outputs.action_graviton_instance_id }}

  awscurl-build:
    runs-on: [ self-hosted, aarch64 ]
    needs: lmi-deps-build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install awscli
      - name: build and upload to S3
        run: |
          cd awscurl && ./gradlew build
          aws s3 cp build/awscurl s3://djl-ai-staging/publish/awscurl/

  stop-runners:
    if: always()
    runs-on: [ self-hosted, scheduler ]
    needs: [ create-runners, awscurl-build ]
    steps:
      - name: Stop all instances
        run: |
          cd /home/ubuntu/djl_benchmark_script/scripts
          instance_id=${{ needs.create-runners.outputs.action_graviton_instance_id}}
          ./stop_instance.sh $instance_id
